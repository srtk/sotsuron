* junk
** 概要
近年Web工学の領域においては、広告の効率アップや文章の分析、検索エンジンの性能向上などが求められている。このため、ユーザの性格や行動の分析、ネットワーク構造の未来予測、文章の意味や感情の理解といった技術が必要とされている。これらの分野は、Web工学と人工知能の複合分野として捉えられており、主に機械学習(マシンラーニング)と呼ばれる手法が用いられている。機械学習とは、対象となる知識を数学的なモデルで表し、モデルを修正していくことで、知識を洗練させていくアプローチのことである。
機械学習で用いる数学モデル及び学習法として、2000年代に、Deep Learningと呼ばれる一群の手法が台頭した。Deep Learningとは、人間の脳の構造に類似した、ネットワーク構造のモデルによって学習を行わせる方法である。Deep Learningは、画像認識や音声認識など数々の分野で優れた性能を示し、注目を浴びるようになった。しかし、Deep Learningは歴史の浅い分野であり、定番のアルゴリズムが固まっていない。また、ライブラリも標準的なものがまだ確立しておらず、Deep Learning技術を様々な問題に応用すること自体が、困難な状況である。


* 参考文献のフォーマット
[Page 98] Page,L.,Brin, S., Motwani,R. and Winograd,T.: The PageRank Citation Ranking: Bringing order to the Web, Technical Report, Stanford University, 1998.
[岸 98] 岸 晃司,坂本 啓,坂本 泰久:インターネット広告効果にユーザ行動が与える影 響に関する研究,情報処理学会研究報告,HI, ヒューマンインタフェース研究会報告,98(22) pp.1-6 ,1998.
* 20140121 先生からのアドバイス
2と3を書く
5と6を入れ替える
現6はただの応用例として書く
論文の始めに掲げた問題意識を、実験の結果と一致させる
「精度を再現のが難しい」と主張するには、他の「論文とソースコードが一致していない例」を挙げるのが手っ取り早い
→追加実験?

* 20140117 大澤さんのアドバイス


* 20140114 先生からのアドバイス
目次構成
質問 : 
1. Deep Learningのアルゴリズム詳細を
　論文のどこに置くべきか?
例)Rectifier, Dropout, Dropconnect
2章と3章の間に、"Deep Learningのアルゴリズム詳細"に相当する章を入れるべき
この場合、現3章は、"Deep Learningの実装における技術"となる

2. Pylearn2の詳細な利用法を記すべきか、「ドキュメント読んで下さい」で済ませるべきか
→論文全体のメッセージを決めてから、トップダウンに考えるべき

他の利用可能なソースコードについてもsurveyすべきか?
→論文全体のメッセージを決めてから、トップダウンに考えるべき

概要は1ページというバランスにおいて、機械学習とDeep Learningの2段落が占める割合かが大きすぎる
3段落目における、この論文が提供するDeep Learningのノウハウとは何か、3段落程度のスペースをフルに使って説明すべき

現4章にて考察を書くのではなく、4章と5章の間にて、「考察と提言」にあたる章を入れるべき
現在は、はじめからPylearn2を使うのが良いとわかっているような構成になってしまっているが、実際5月からやってきた流れみて、決してそんなことはない
(実際DLT使ったり、DropConnect動かそうとしたり紆余曲折してた)
コンセプトを貫いて、途中で動かそうとしたものを全て記述すべき
夏の実験について書いても構わない

概要は早めにしっかり書いた方がいいです。
ページによって行間がそろってませんが、規定のフォーマットに直して下さい。
全体に、とにかく埋めることを意識し、記述を増やしていってください。

1.3節をしっかり記述することが大事ですね。
4章はノウハウの記述で、一般性をもって書くのが難しいところではありますが、
できるだけ一般性のある記述になるように心がけるといいと思います。
5.2と5.3の順番は逆のほうがよいと思います。


* 論文情報
論文タイトル
Web工学で応用するためのDeep Learning利用法と知見の体系化
学生証番号
03-120929
学生氏名
黒滝 紘生
指導教員氏名
松尾 豊 准教授


* 新しい概要
近年機械学習の分野において、Deep Learningと呼ばれるアルゴリズム群が優れた成果を納めている。Web工学でも、Deep Learningを応用することによる発展が期待される。
しかし、Deep Learningは歴史の浅い発展途上の技術であり、改良されたアルゴリズムが次々と提案されている。どのような原理によって学習性能が高まっているのか、解明されていない部分が多いことも手伝って、どのアルゴリズムを定番とすれば良いのか、試行錯誤の段階にある。アルゴリズムが開発途上で一定していないため、公開されているライブラリも、現状では、開発用途や実験的なものが多くなってしまっている。そもそも有力なアルゴリズムに対応する実装が用意されていない場合や、問題に応じて自らアルゴリズムの細部を調整しなければならない場合もある。標準と言える公開ライブラリが確立していない状況なので、Web工学など応用分野にDeep Learningを適用したいと考えても、プログラム開発に長い時間がかかってしまい、開発における大きな障壁となっている。
さらに、現在のDeep Learning技術は、他のアルゴリズムに比べて学習にかかる時間が長いことが多く、ハードウェア性能が低いマシンでは、アルゴリズムを実用的な時間で実行すること自体が容易ではない。実行時間の長さをカバーするため、GPUを用いて演算をスピードアップさせる手法が確立されつつあるが、特殊なプログラミングが要求され、障壁の1つとなっている。ノートPCには、並列演算に利用可能なGPUを搭載していないモデルも多い。この場合ライブラリがGPUを利用しているために、却ってその実行が不可能になってしまうこともある。
以上に挙げた原因により、Deep Learning技術に関心を持っても、実際の問題にDeep Learningを試行すること自体が、困難である。このような現状を踏まえ、本研究では、Web工学における応用を見据えつつ、Deep Learningを様々な問題に応用するための方法論を整理する。Deep Learningの特徴である高い学習性能を確実に利用できて、その上で出来る限り、実行時間の短さ、実行プログラムの使いやすさ、アルゴリズムの調整・改良の容易さを兼ね備えた方法を確立する。


* 1次情報と2次情報
1次情報 : 論文
2次情報 : まとめサイトなど、引用元を遡ることが出来るもの
引用 : カギ括弧したり、段落を下げて記述すること
再構成 : 中身はコピペしてもいいから、自分でもう一回作る

1次情報は、参考文献として挙げてよい 2次情報は不可

1次情報や2次情報の地の文を引用したり、表をコピペして再構成することは、引用元を明らかにすれば許される

1次情報の図をSSして載せるのは、引用元を明らかにすればOK
2次情報にしかない図をSSして載せるのもOKだが、頑張ってる感が無いので、自力で作り直すことが強く推奨される

